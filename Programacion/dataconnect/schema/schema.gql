# Schema for health and fitness application

# Usuario (User) table is keyed by Firebase Auth UID.
type Usuario @table {
# `@default(expr: "auth.uid")` sets it to Firebase Auth UID during insert and upsert.
id: String! @default(expr: "auth.uid")
nombre: String! @col(dataType: "varchar(100)")
email: String! @col(dataType: "varchar(100)")
password: String @col(dataType: "varchar(100)")
foto: String @col(dataType: "text")
fechaRegistro: Date! @default(expr: "request.time")
tema: String @col(dataType: "varchar(50)")
colorPrimario: String @col(dataType: "varchar(20)")
colorSecundario: String @col(dataType: "varchar(20)")
# The following fields are generated based on relationships:
# favoritos_on_usuario: [Producto!]!
# comentarios_on_usuario: [Comentario!]!
}

# Producto (Product) is keyed by a randomly generated UUID.
type Producto @table {
id: UUID! @default(expr: "uuidV4()")
nombre: String! @col(dataType: "varchar(100)")
descripcion: String @col(dataType: "text")
precio: Float
imagen: String @col(dataType: "text")
categoria: String @col(dataType: "varchar(50)")
fechaCreacion: Date! @default(expr: "request.time")
disponible: Boolean! @default(value: true)
# The following fields are generated based on relationships:
# favoritos_on_producto: [Usuario!]!
}

# Noticia (News) is keyed by a randomly generated UUID.
type Noticia @table {
id: UUID! @default(expr: "uuidV4()")
titulo: String! @col(dataType: "varchar(200)")
contenido: String! @col(dataType: "text")
imagen: String @col(dataType: "text")
categoria: String @col(dataType: "varchar(50)")
fechaPublicacion: Date! @default(expr: "request.time")
autor: String @col(dataType: "varchar(100)")
destacada: Boolean! @default(value: false)
# The following fields are generated based on relationships:
# comentarios_on_noticia: [Comentario!]!
}

# Comentario (Comment) is a relation between Usuario and Noticia
type Comentario @table {
id: UUID! @default(expr: "uuidV4()")
usuario: Usuario!
noticia: Noticia!
texto: String! @col(dataType: "text")
fechaComentario: Date! @default(expr: "request.time")
}

# Favorito (Favorite) is a join table between Usuario and Producto
# It has composite primary keys usuario and producto
type Favorito @table(key: ["usuario", "producto"]) {
usuario: Usuario!
producto: Producto!
fechaAgregado: Date! @default(expr: "request.time")
}
